@import url("hydrogen.css");

html,
body {
  height: 100%;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  font-size: 1.4rem;
  margin: 0;
  padding: 0;
}

a {
  color: #66b;
}

/**
 * The playroom app has two main areas: a video panel, and a chat panel.
 */
playroom-app {
  display: grid;
  height: 100%;
}
stream-panel {
  grid-area: video;
}
chat-panel {
  grid-area: chat;
}

/**
 * On wide screens, the video and chat areas are a horizontal two-column view.
 */
@media (min-width: 1025px) {
  playroom-app {
    grid-template-areas: "video chat";
    grid-template-columns: 1fr 450px;
  }
}

/**
 * On narrow screens, the video and chat areas are vertically stacked as two
 * rows. We give it a min-height, so that instead of scrunching if it gets too
 * small, it gets a scroll bar.
 */
@media (max-width: 1024px) {
  playroom-app {
    grid-template-areas:
      "video"
      "chat";
    grid-template-rows: 50% 50%;
    min-height: 400px;
  }
}

/**
 * The video panel has a dark background, and centers its contents. It will be
 * covered by the iframe once it loads.
 */
stream-panel {
  background: #223;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/**
 * The embedded iframe takes up the whole area.
 */
stream-panel iframe {
  width: 100%;
  height: 100%;
}

/**
 * The stream idle indicator appears when there's no stream.
 */
stream-idle-indicator {
  color: white;
  text-align: center;
}

/**
 * chat-panel is the main chat container. It uses a single grid area, to size
 * its content to its own full size.
 */
chat-panel {
  display: grid;
  grid-template-areas: "the-single-area";
  min-height: 100%;
}

/**
 * All three content types take up the whole chat-panel, and are column flex
 * containers.
 */
chat-main,
chat-loading-message,
chat-error-message {
  grid-area: the-single-area;
  display: flex;
  flex-direction: column;
}

/**
 * The loading and error messages center their content.
 */
chat-loading-message,
chat-error-message {
  justify-content: center;
  text-align: center;
}

/**
 * Chat loading messages have big typographical styles!
 */
chat-loading-message {
  font-size: 1.5em;
}

/**
 * Chat error messages have medium typographical styles.
 */
chat-error-message {
  font-size: 1.2em;
}

/**
 * The chat header sits above the main chat area, with settings etc.
 */
chat-main header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 8px 16px;
}

/**
 * The chat title should be large, but not as large as most h1s.
 */
chat-main header h1 {
  font-size: 1.4em;
}

/**
 * The "Display name" form flows horizontally.
 */
display-name-form form {
  display: flex;
  gap: 0.25em;
  align-items: flex-end;
}

/**
 * Add some space between the "Display name" label and the input!
 */
display-name-form label {
  display: flex;
  flex-direction: column;
  gap: 0.25em;
}

/**
 * While the page is still loading JS, hide all elements with v-if or v-show
 * conditions, unless they're also tagged with v-show-while-page-loading.
 *
 * That way, we can show loading UI while the JS is loading, but hide it once
 * the page starts up.
 */
playroom-app[v-scope] :is([v-if], [v-show]):not([v-show-while-page-loading]) {
  display: none;
}
